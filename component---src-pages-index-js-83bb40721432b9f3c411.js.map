{"version":3,"file":"component---src-pages-index-js-83bb40721432b9f3c411.js","mappings":"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","sources":["webpack://albert.wtf/./src/components/footer.js","webpack://albert.wtf/./src/components/header.js","webpack://albert.wtf/./src/components/header.module.css","webpack://albert.wtf/./src/components/layout.js","webpack://albert.wtf/./src/components/seo.js","webpack://albert.wtf/./src/hooks/useSiteMetadata.js","webpack://albert.wtf/./src/components/spotifyGenreVisualizations.js","webpack://albert.wtf/./src/components/SpotifyGenreVisualizations.module.css","webpack://albert.wtf/./src/pages/index.js","webpack://albert.wtf/./src/components/layout.module.css"],"sourcesContent":["import * as React from 'react'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\nimport { Link } from 'gatsby'\n\nconst Footer = () => {\n  const data = useSiteMetadata()\n  const { github, instagram, linkedin, goodreads } = data\n  return (\n    <div>\n      <Link to={github} target=\"_blank\">github</Link>\n      &nbsp;‚Ä¢&nbsp;\n      <Link to={instagram} target=\"_blank\">instagram</Link>\n      &nbsp;‚Ä¢&nbsp;\n      <Link to={linkedin} target=\"_blank\">linkedin</Link>\n      &nbsp;‚Ä¢&nbsp;\n      <Link to={goodreads} target=\"_blank\">goodreads</Link>\n      <br />\n      <Link to=\"/copyright\">&copy;</Link> 2014 - {(new Date()).getFullYear()}\n      </div>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\nimport {\n  siteTitle,\n} from \"./header.module.css\"\n\nconst Header = ({pageTitle}) => {\n  const data = useSiteMetadata()\n  return (\n    <header className={siteTitle}>\n      {\n        pageTitle == null ? \n          data?.title :\n          pageTitle\n      }\n    </header>\n  )\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport var siteTitle = \"header-module--siteTitle--0667c\";","import * as React from 'react'\nimport {\n  container,\n} from './layout.module.css'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\nimport { Link } from 'gatsby'\nimport Footer from './footer'\nimport Header from './header'\n\nconst Layout = ({ children, pageTitle = null }) => {\n  const data = useSiteMetadata()\n  return (\n    <div className={container}>\n      <Link to=\"/\" className=\"header\">\n        <Header pageTitle={pageTitle} data={data} />\n      </Link>\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\n\nconst Seo = ({ title }) => {\n  const data = useSiteMetadata()\n  return (\n    <title>\n      {title == null ? '' : `${title} | `}{data?.title}\n    </title>\n  )\n}\n\nexport default Seo","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          github\n          instagram\n          linkedin\n          goodreads\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata","import * as React from 'react'\nimport PlaylistsGenres from '../data/playlists_and_genres.json'\nimport {\n  playlistCube,\n  playlistCubeContainer,\n} from './SpotifyGenreVisualizations.module.css'\n\nconst SpotifyGenreVisualizations = ({limit}) => {\n  const playlistsGenres = PlaylistsGenres.sort((playlistA, playlistB) => {\n    const createdAtA = new Date(playlistA.created_at)\n    const createdAtB = new Date(playlistB.created_at)\n    if (createdAtA > createdAtB) return -1;\n    if (createdAtA < createdAtB) return 1;\n    return 0\n  }).slice(0, limit != null ? limit : PlaylistsGenres.length)\n\n  return (\n    <div>\n    {\n        playlistsGenres?.map(playlist => {\n        let totalGenreXCounter = 0\n        let genreWidthBuffer = 0\n        const sortedGenres = playlist?.genres?.sort((genreA, genreB) => {\n            if (genreA.pca > genreB.pca) return -1;\n            if (genreA.pca < genreB.pca) return 1;\n            return 0\n        }) || []\n        sortedGenres.forEach(genre => {\n            totalGenreXCounter = totalGenreXCounter + genre[\"count\"]\n        })\n        return (\n            <div className={playlistCubeContainer}>\n            {\n                sortedGenres?.map((genre, index) => {\n                const color = genre[\"color\"]\n                const rgb = `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n                let width = parseFloat((genre[\"count\"] / totalGenreXCounter * 100).toFixed(2))\n                genreWidthBuffer = index !== sortedGenres.length - 1 ? genreWidthBuffer + width : genreWidthBuffer\n                if (index === sortedGenres.length - 1) {\n                    const overshoot = parseFloat(Math.abs(100 - genreWidthBuffer).toFixed(2))\n                    if (genreWidthBuffer >= 100) {\n                    width = width - overshoot\n                    } else {\n                    width = width + overshoot\n                    }\n                }\n                return (\n                    <div title={genre[\"name\"]} className={playlistCube} style={{\n                    background: rgb,\n                    width: `${width.toFixed(2)}%`,\n                    }} />\n                )\n                })\n            }\n            </div>\n        )\n        })\n    }        \n    </div>\n  )\n}\n\nexport default SpotifyGenreVisualizations","// extracted by mini-css-extract-plugin\nexport var playlistCube = \"SpotifyGenreVisualizations-module--playlistCube--b855e\";\nexport var playlistCubeContainer = \"SpotifyGenreVisualizations-module--playlistCubeContainer--82c0f\";","import * as React from 'react'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport SpotifyGenreVisualizations from '../components/spotifyGenreVisualizations'\nimport { Link } from 'gatsby'\n\nconst IndexPage = () => {\n  return (\n      <Layout>\n        <p>\n          Software engineer based in üìç San Francisco <br /> \n          <Link to=\"https://www.usajapan.org/japanese-language-classes/japanese-group-classes/\" target=\"_blank\">Japanese</Link>, <Link to=\"https://www.clayroomsf.com/\" target=\"_blank\">studio pottery</Link>, light reading, <Link to=\"http://www.churchof8wheels.com/\" target=\"_blank\">rollerblading</Link>, and coffee <br />\n          My recent <Link to=\"/playlists\">monthly Spotify</Link>'s genres visualized: <br />\n          <SpotifyGenreVisualizations limit={8}/>\n        </p>\n      </Layout>\n    )\n}\n\nexport const Head = () => (\n  <>\n    <Seo />\n    <meta name=\"description\" content=\"albert.wtf\" />\n  </>\n)\n\nexport default IndexPage","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";"],"names":["data","useSiteMetadata","github","instagram","linkedin","goodreads","Link","to","target","Date","getFullYear","pageTitle","className","title","children","container","useStaticQuery","site","siteMetadata","limit","playlistsGenres","PlaylistsGenres","playlistA","playlistB","createdAtA","created_at","createdAtB","slice","map","playlist","totalGenreXCounter","genreWidthBuffer","sortedGenres","genres","sort","genreA","genreB","pca","forEach","genre","index","color","rgb","width","parseFloat","toFixed","length","overshoot","Math","abs","style","background","Head","name","content"],"sourceRoot":""}