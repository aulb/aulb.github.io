{"version":3,"sources":["webpack:///path---posts-note-no-d0e96ecb6647c896bfb9.js","webpack:///./.cache/json/posts-note-no.json"],"names":["webpackJsonp","398","module","exports","data","markdownRemark","html","frontmatter","title","date","language","categories","carousel","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,0oEAAAC,aAA0qEC,MAAA,QAAAC,KAAA,mBAAAC,SAAA,KAAAC,WAAA,gBAAAC,SAAA,QAAyGC,aAAgBC,KAAA","file":"path---posts-note-no-d0e96ecb6647c896bfb9.js","sourcesContent":["webpackJsonp([121393657024481],{\n\n/***/ 398:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>\\\"Hows your <strike>bootcamp</strike>?\\\"</h1>\\n<p>Not a -bootcamp-</p>\\n<p>The couple weeks since I started hanging out at <a href=\\\"https://recurse.com\\\">Recurse Center</a> with the goal of coming out as a better programming. </p>\\n<h1>Doing things step by step</h1>\\n<p>One of the many goals that at Recurse was to start TDD-ing new projects I do. I also want to learn new (relative to me) technologies such as Elixir (and Phoenix framework), React Native, and get better grasp at Redux. I decided to remake my old Pokemon visualization app in Elixir+Phoenix+React and quickly realized that trying to apply TDD to new projects with new language ended up being a huge unnecessary hurdle.</p>\\n<p>Its tenfold better to take things step by step, right from the start. Learning new concepts by bridging from familiar territories. I took a major step back. I'm most familiar with Python but have yet mastered the ways of Django/Flask. So this is a good starting point to help me make better connection to Phoenix. Next would be to actually do small exercises (like Leetcode/Hackerrank problems) in Elixir. Get comfy with Elixir scripting.</p>\\n<h1>Personal standup and reflection everyday</h1>\\n<p>Two weeks passed by </p>\\n<h1>Supercharging ST3</h1>\\n<p>I'm gonna try to catalogue the steps. Moved to OS X 10.12 after years of being stuck in 10.9. First step ofcourse is to download ST3.</p>\\n<h2>Install Package Control</h2>\\n<p>For all things.\\n<a href=\\\"https://packagecontrol.io/installation\\\">Package Control Installation</a>.</p>\\n<h2>Install Babel</h2>\\n<p>For JSX, react specific highlights.</p>\\n<h2>Install ESLint</h2>\\n<ul>\\n<li>Done</li>\\n</ul>\\n<h1>One of my goals at Recurse Center is to get into TDD</h1>\\n<p><a href=\\\"https://semaphoreci.com/community/tutorials/testing-react-components-with-enzyme-and-mocha\\\">https://semaphoreci.com/community/tutorials/testing-react-components-with-enzyme-and-mocha</a>\\n<a href=\\\"https://ericnish.io/blog/how-to-unit-test-react-components-with-enzyme/\\\">https://ericnish.io/blog/how-to-unit-test-react-components-with-enzyme/</a>\\n<a href=\\\"https://github.com/airbnb/enzyme/issues/302\\\">https://github.com/airbnb/enzyme/issues/302</a></p>\",\"frontmatter\":{\"title\":\"ðŸš€ RC\",\"date\":\"11 October, 2017\",\"language\":null,\"categories\":\"side-projects\",\"carousel\":null}}},\"pathContext\":{\"slug\":\"/posts/note/no/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-note-no-d0e96ecb6647c896bfb9.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>\\\"Hows your <strike>bootcamp</strike>?\\\"</h1>\\n<p>Not a -bootcamp-</p>\\n<p>The couple weeks since I started hanging out at <a href=\\\"https://recurse.com\\\">Recurse Center</a> with the goal of coming out as a better programming. </p>\\n<h1>Doing things step by step</h1>\\n<p>One of the many goals that at Recurse was to start TDD-ing new projects I do. I also want to learn new (relative to me) technologies such as Elixir (and Phoenix framework), React Native, and get better grasp at Redux. I decided to remake my old Pokemon visualization app in Elixir+Phoenix+React and quickly realized that trying to apply TDD to new projects with new language ended up being a huge unnecessary hurdle.</p>\\n<p>Its tenfold better to take things step by step, right from the start. Learning new concepts by bridging from familiar territories. I took a major step back. I'm most familiar with Python but have yet mastered the ways of Django/Flask. So this is a good starting point to help me make better connection to Phoenix. Next would be to actually do small exercises (like Leetcode/Hackerrank problems) in Elixir. Get comfy with Elixir scripting.</p>\\n<h1>Personal standup and reflection everyday</h1>\\n<p>Two weeks passed by </p>\\n<h1>Supercharging ST3</h1>\\n<p>I'm gonna try to catalogue the steps. Moved to OS X 10.12 after years of being stuck in 10.9. First step ofcourse is to download ST3.</p>\\n<h2>Install Package Control</h2>\\n<p>For all things.\\n<a href=\\\"https://packagecontrol.io/installation\\\">Package Control Installation</a>.</p>\\n<h2>Install Babel</h2>\\n<p>For JSX, react specific highlights.</p>\\n<h2>Install ESLint</h2>\\n<ul>\\n<li>Done</li>\\n</ul>\\n<h1>One of my goals at Recurse Center is to get into TDD</h1>\\n<p><a href=\\\"https://semaphoreci.com/community/tutorials/testing-react-components-with-enzyme-and-mocha\\\">https://semaphoreci.com/community/tutorials/testing-react-components-with-enzyme-and-mocha</a>\\n<a href=\\\"https://ericnish.io/blog/how-to-unit-test-react-components-with-enzyme/\\\">https://ericnish.io/blog/how-to-unit-test-react-components-with-enzyme/</a>\\n<a href=\\\"https://github.com/airbnb/enzyme/issues/302\\\">https://github.com/airbnb/enzyme/issues/302</a></p>\",\"frontmatter\":{\"title\":\"ðŸš€ RC\",\"date\":\"11 October, 2017\",\"language\":null,\"categories\":\"side-projects\",\"carousel\":null}}},\"pathContext\":{\"slug\":\"/posts/note/no/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-note-no.json\n// module id = 398\n// module chunks = 121393657024481"],"sourceRoot":""}