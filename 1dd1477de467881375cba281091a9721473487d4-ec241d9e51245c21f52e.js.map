{"version":3,"file":"1dd1477de467881375cba281091a9721473487d4-ec241d9e51245c21f52e.js","mappings":"+IAsBA,IAlBe,KACb,MAAMA,GAAOC,EAAAA,EAAAA,MACP,OAAEC,EAAM,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,GAAcL,EACnD,OACE,2BACE,gBAAC,KAAI,CAACM,GAAIJ,EAAQK,OAAO,UAAS,UAAa,MAE/C,gBAAC,KAAI,CAACD,GAAIH,EAAWI,OAAO,UAAS,aAAgB,MAErD,gBAAC,KAAI,CAACD,GAAIF,EAAUG,OAAO,UAAS,YAAe,MAEnD,gBAAC,KAAI,CAACD,GAAID,EAAWE,OAAO,UAAS,aACrC,2BAAM,aACU,IAAIC,MAAQC,cACtB,C,6ECYZ,IArBe,IAAqC,IAApC,SAAEC,EAAQ,UAAEC,EAAY,MAAM,EAC5C,MAAMX,GAAOC,EAAAA,EAAAA,KACb,OACE,uBAAKW,UAAWC,EAAAA,GACd,gBAAC,KAAI,CAACP,GAAG,IAAIM,UAAU,UACrB,0BAAQA,UAAWE,EAAAA,GAEF,MAAbH,EACEX,aAAI,EAAJA,EAAMe,MACNJ,IAIR,4BACGD,GAEH,gBAAC,IAAM,MACH,C,+CCdV,IATY,IAAgB,IAAf,MAAEK,GAAO,EACpB,MAAMf,GAAOC,EAAAA,EAAAA,KACb,OACE,6BACY,MAATc,EAAgB,GAAQA,EAAK,MAAOf,aAAI,EAAJA,EAAMe,MACrC,C,+ECsDZ,MAtDmC,KACjC,MAAMC,EAAkBC,EAAAA,MAAqB,CAACC,EAAWC,KACvD,MAAMC,EAAa,IAAIZ,KAAKU,EAAUG,YAChCC,EAAa,IAAId,KAAKW,EAAUE,YACtC,OAAID,EAAaE,GAAoB,EACjCF,EAAaE,EAAmB,EAC7B,CAAC,IAEV,OACE,2BAEIN,aAAe,EAAfA,EAAiBO,KAAIC,IAAa,IAAD,EACjC,IAAIC,EAAqB,EACrBC,EAAmB,EACvB,MAAMC,GAAeH,SAAgB,QAAR,EAARA,EAAUI,cAAM,WAAR,EAAR,EAAkBC,MAAK,CAACC,EAAQC,IAC7CD,EAAOE,IAAMD,EAAOC,KAAa,EACjCF,EAAOE,IAAMD,EAAOC,IAAY,EAC7B,MACL,GAIN,OAHAL,EAAaM,SAAQC,IACjBT,GAA0CS,EAAa,KAAC,IAGxD,uBAAKtB,UC5BkB,mED8BnBe,aAAY,EAAZA,EAAcJ,KAAI,CAACW,EAAOC,KAC1B,MAAMC,EAAQF,EAAa,MACrBG,EAAG,OAAUD,EAAM,GAAE,KAAKA,EAAM,GAAE,KAAKA,EAAM,GAAE,IACrD,IAAIE,EAAQC,YAAYL,EAAa,MAAIT,EAAqB,KAAKe,QAAQ,IAE3E,GADAd,EAAmBS,IAAUR,EAAac,OAAS,EAAIf,EAAmBY,EAAQZ,EAC9ES,IAAUR,EAAac,OAAS,EAAG,CACnC,MAAMC,EAAYH,WAAWI,KAAKC,IAAI,IAAMlB,GAAkBc,QAAQ,IAClEd,GAAoB,IACxBY,GAAgBI,EAEhBJ,GAAgBI,CAEpB,CACA,OACI,uBAAK3B,MAAOmB,EAAY,KAAGtB,UC7CrB,yDD6C8CiC,MAAO,CAC3DC,WAAYT,EACZC,MAAUA,EAAME,QAAQ,GAAE,MACrB,IAIP,IAIR,C,qCEtCV,IAlBwB,KACTO,EAAAA,EAAAA,IAAe,cAchBC,KAAKC,Y,8EChBZ,IAAIpC,EAAY,kCACZC,EAAY,iC","sources":["webpack://albert.wtf/./src/components/footer.js","webpack://albert.wtf/./src/components/layout.js","webpack://albert.wtf/./src/components/seo.js","webpack://albert.wtf/./src/components/spotifyGenreVisualizations.js","webpack://albert.wtf/./src/components/SpotifyGenreVisualizations.module.css","webpack://albert.wtf/./src/hooks/useSiteMetadata.js","webpack://albert.wtf/./src/components/layout.module.css"],"sourcesContent":["import * as React from 'react'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\nimport { Link } from 'gatsby'\n\nconst Footer = () => {\n  const data = useSiteMetadata()\n  const { github, instagram, linkedin, goodreads } = data\n  return (\n    <div>\n      <Link to={github} target=\"_blank\">github</Link>\n      &nbsp;•&nbsp;\n      <Link to={instagram} target=\"_blank\">instagram</Link>\n      &nbsp;•&nbsp;\n      <Link to={linkedin} target=\"_blank\">linkedin</Link>\n      &nbsp;•&nbsp;\n      <Link to={goodreads} target=\"_blank\">goodreads</Link>\n      <br />\n      &copy; 2014 - {(new Date()).getFullYear()}\n      </div>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\nimport {\n  container,\n  siteTitle,\n} from './layout.module.css'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\nimport { Link } from 'gatsby'\nimport Footer from './footer'\n\nconst Layout = ({ children, pageTitle = null }) => {\n  const data = useSiteMetadata()\n  return (\n    <div className={container}>\n      <Link to=\"/\" className=\"header\">\n        <header className={siteTitle}>\n          {\n            pageTitle == null ? \n              data?.title :\n              pageTitle\n          }\n        </header>\n      </Link>\n      <main>\n        {children}\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout","import * as React from 'react'\nimport useSiteMetadata from '../hooks/useSiteMetadata'\n\nconst Seo = ({ title }) => {\n  const data = useSiteMetadata()\n  return (\n    <title>\n      {title == null ? '' : `${title} | `}{data?.title}\n    </title>\n  )\n}\n\nexport default Seo","import * as React from 'react'\nimport PlaylistsGenres from '../data/playlists_and_genres.json'\nimport {\n  playlistCube,\n  playlistCubeContainer,\n} from './SpotifyGenreVisualizations.module.css'\n\n// TODO: Add limit on how many gets rendered\nconst SpotifyGenreVisualizations = () => {\n  const playlistsGenres = PlaylistsGenres.sort((playlistA, playlistB) => {\n    const createdAtA = new Date(playlistA.created_at)\n    const createdAtB = new Date(playlistB.created_at)\n    if (createdAtA > createdAtB) return -1;\n    if (createdAtA < createdAtB) return 1;\n    return 0\n  })\n  return (\n    <div>\n    {\n        playlistsGenres?.map(playlist => {\n        let totalGenreXCounter = 0\n        let genreWidthBuffer = 0\n        const sortedGenres = playlist?.genres?.sort((genreA, genreB) => {\n            if (genreA.pca > genreB.pca) return -1;\n            if (genreA.pca < genreB.pca) return 1;\n            return 0\n        }) || []\n        sortedGenres.forEach(genre => {\n            totalGenreXCounter = totalGenreXCounter + genre[\"count\"]\n        })\n        return (\n            <div className={playlistCubeContainer}>\n            {\n                sortedGenres?.map((genre, index) => {\n                const color = genre[\"color\"]\n                const rgb = `rgb(${color[0]}, ${color[1]}, ${color[2]})`\n                let width = parseFloat((genre[\"count\"] / totalGenreXCounter * 100).toFixed(2))\n                genreWidthBuffer = index !== sortedGenres.length - 1 ? genreWidthBuffer + width : genreWidthBuffer\n                if (index === sortedGenres.length - 1) {\n                    const overshoot = parseFloat(Math.abs(100 - genreWidthBuffer).toFixed(2))\n                    if (genreWidthBuffer >= 100) {\n                    width = width - overshoot\n                    } else {\n                    width = width + overshoot\n                    }\n                }\n                return (\n                    <div title={genre[\"name\"]} className={playlistCube} style={{\n                    background: rgb,\n                    width: `${width.toFixed(2)}%`,\n                    }} />\n                )\n                })\n            }\n            </div>\n        )\n        })\n    }        \n    </div>\n  )\n}\n\nexport default SpotifyGenreVisualizations","// extracted by mini-css-extract-plugin\nexport var playlistContainer = \"SpotifyGenreVisualizations-module--playlistContainer--63614\";\nexport var playlistCube = \"SpotifyGenreVisualizations-module--playlistCube--b855e\";\nexport var playlistCubeContainer = \"SpotifyGenreVisualizations-module--playlistCubeContainer--82c0f\";\nexport var playlistMainContainer = \"SpotifyGenreVisualizations-module--playlistMainContainer--982c9\";","import { graphql, useStaticQuery } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          github\n          instagram\n          linkedin\n          goodreads\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var siteTitle = \"layout-module--siteTitle--86bf1\";"],"names":["data","useSiteMetadata","github","instagram","linkedin","goodreads","to","target","Date","getFullYear","children","pageTitle","className","container","siteTitle","title","playlistsGenres","PlaylistsGenres","playlistA","playlistB","createdAtA","created_at","createdAtB","map","playlist","totalGenreXCounter","genreWidthBuffer","sortedGenres","genres","sort","genreA","genreB","pca","forEach","genre","index","color","rgb","width","parseFloat","toFixed","length","overshoot","Math","abs","style","background","useStaticQuery","site","siteMetadata"],"sourceRoot":""}